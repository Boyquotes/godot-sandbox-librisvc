name: Main

on:
  push:
    paths-ignore:
      - ".gitignore"
      - "*.md"
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build_type: ["Debug", "Release"]
        config:
          - { name: "üçè macOS Clang", os: macos-latest }
          - { name: "üêß Linux GCC", os: ubuntu-latest }
          - { name: "ü™ü Windows MinGW", os: windows-latest, compiler: "mingw" }

    name: üõ† Build / ${{ matrix.config.name }} (${{ matrix.build_type }})
    runs-on: ${{ matrix.config.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Dependencies (macOS)
        if: matrix.config.os == 'macos-latest'
        run: brew install ccache ninja

      - name: Install Dependencies (Linux)
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y ccache ninja-build

      - name: Install Dependencies (Windows MinGW)
        if: matrix.config.os == 'windows-latest' && matrix.config.compiler == 'mingw'
        run: |
          choco install mingw
          choco install ninja
          choco install ccache

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: "10G"
          key: ${{ matrix.config.os }}-${{ matrix.build_type }}

      - name: Configure
        run: |
          mkdir -p GDExtension-build
          cmake -B GDExtension-build -G "Ninja" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} .

      - name: Build
        run: cmake --build GDExtension-build

      - name: Upload artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-${{ matrix.build_type }}-${{ matrix.config.os }}
          path: ${{ github.workspace }}/GDExtension-build/libgodot-riscv.${{ matrix.config.os == 'macos-latest' && 'dylib' || matrix.config.os == 'ubuntu-latest' && 'so' || 'dll' }}
