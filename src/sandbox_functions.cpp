#include "sandbox.h"

#include <unordered_set>

using namespace godot;
static const std::unordered_set<std::string_view> exclude_functions{
	"sys_veval",
	"sys_vcall",
	"sys_vcreate",
	"sys_vfetch",
	"sys_vclone",
	"sys_vstore",
	"sys_vfree",
	"sys_print",
	"sys_get_obj",
	"sys_obj_callp",
	"sys_obj",
	"sys_get_node",
	"sys_node",
	"sys_node2d",
	"sys_node3d",
	"sys_throw",

	"main",
	"_Exit",
	"_GLOBAL__sub_I_eh_alloc.cc",
	"_GLOBAL__sub_I_main",
	"_GLOBAL__sub_I_properties",
	"_GLOBAL__sub_I_system_error.cc",
	"_IO_adjust_column",
	"_IO_adjust_wcolumn",
	"_IO_cleanup",
	"_IO_default_doallocate",
	"_IO_default_finish",
	"_IO_default_imbue",
	"_IO_default_pbackfail",
	"_IO_default_read",
	"_IO_default_seek",
	"_IO_default_seekoff",
	"_IO_default_seekpos",
	"_IO_default_setbuf",
	"_IO_default_showmanyc",
	"_IO_default_stat",
	"_IO_default_sync",
	"_IO_default_uflow",
	"_IO_default_underflow",
	"_IO_default_write",
	"_IO_default_xsgetn",
	"_IO_default_xsputn",
	"_IO_do_write",
	"_IO_doallocbuf",
	"_IO_enable_locks",
	"_IO_fclose",
	"_IO_file_attach",
	"_IO_file_close",
	"_IO_file_close_it",
	"_IO_file_close_mmap",
	"_IO_file_doallocate",
	"_IO_file_finish",
	"_IO_file_fopen",
	"_IO_file_init",
	"_IO_file_open",
	"_IO_file_overflow",
	"_IO_file_read",
	"_IO_file_seek",
	"_IO_file_seekoff",
	"_IO_file_seekoff_maybe_mmap",
	"_IO_file_seekoff_mmap",
	"_IO_file_setbuf",
	"_IO_file_setbuf_mmap",
	"_IO_file_stat",
	"_IO_file_sync",
	"_IO_file_sync_mmap",
	"_IO_file_underflow",
	"_IO_file_underflow_maybe_mmap",
	"_IO_file_underflow_mmap",
	"_IO_file_write",
	"_IO_file_xsgetn",
	"_IO_file_xsgetn_maybe_mmap",
	"_IO_file_xsgetn_mmap",
	"_IO_file_xsputn",
	"_IO_flush_all",
	"_IO_flush_all_linebuffered",
	"_IO_fopen",
	"_IO_fopen64",
	"_IO_fputs",
	"_IO_free_backup_area",
	"_IO_free_wbackup_area",
	"_IO_funlockfile",
	"_IO_fwide",
	"_IO_fwrite",
	"_IO_getline",
	"_IO_getline_info",
	"_IO_init",
	"_IO_init_internal",
	"_IO_init_marker",
	"_IO_init_wmarker",
	"_IO_iter_begin",
	"_IO_iter_end",
	"_IO_iter_file",
	"_IO_iter_next",
	"_IO_least_marker",
	"_IO_least_wmarker",
	"_IO_link_in",
	"_IO_list_lock",
	"_IO_list_resetlock",
	"_IO_list_unlock",
	"_IO_marker_delta",
	"_IO_marker_difference",
	"_IO_new_do_write",
	"_IO_new_fclose",
	"_IO_new_file_attach",
	"_IO_new_file_close_it",
	"_IO_new_file_finish",
	"_IO_new_file_fopen",
	"_IO_new_file_init",
	"_IO_new_file_init_internal",
	"_IO_new_file_overflow",
	"_IO_new_file_seekoff",
	"_IO_new_file_setbuf",
	"_IO_new_file_sync",
	"_IO_new_file_underflow",
	"_IO_new_file_write",
	"_IO_new_file_xsputn",
	"_IO_new_fopen",
	"_IO_no_init",
	"_IO_old_init",
	"_IO_remove_marker",
	"_IO_seekmark",
	"_IO_seekwmark",
	"_IO_setb",
	"_IO_sgetn",
	"_IO_sputbackc",
	"_IO_sputbackwc",
	"_IO_str_count",
	"_IO_str_finish",
	"_IO_str_init_readonly",
	"_IO_str_init_static",
	"_IO_str_init_static_internal",
	"_IO_str_overflow",
	"_IO_str_pbackfail",
	"_IO_str_seekoff",
	"_IO_str_underflow",
	"_IO_sungetc",
	"_IO_sungetwc",
	"_IO_switch_to_backup_area",
	"_IO_switch_to_get_mode",
	"_IO_switch_to_main_get_area",
	"_IO_switch_to_main_wget_area",
	"_IO_switch_to_wbackup_area",
	"_IO_switch_to_wget_mode",
	"_IO_un_link",
	"_IO_un_link.part.0",
	"_IO_unsave_markers",
	"_IO_unsave_wmarkers",
	"_IO_vsprintf",
	"_IO_vtable_check",
	"_IO_wdefault_doallocate",
	"_IO_wdefault_finish",
	"_IO_wdefault_pbackfail",
	"_IO_wdefault_uflow",
	"_IO_wdefault_xsgetn",
	"_IO_wdefault_xsputn",
	"_IO_wdo_write",
	"_IO_wdoallocbuf",
	"_IO_wfile_overflow",
	"_IO_wfile_seekoff",
	"_IO_wfile_sync",
	"_IO_wfile_underflow",
	"_IO_wfile_underflow_maybe_mmap",
	"_IO_wfile_underflow_mmap",
	"_IO_wfile_xsputn",
	"_IO_wmarker_delta",
	"_IO_wsetb",
	"_Unwind_Backtrace",
	"_Unwind_DebugHook",
	"_Unwind_DeleteException",
	"_Unwind_FindEnclosingFunction",
	"_Unwind_Find_FDE",
	"_Unwind_ForcedUnwind",
	"_Unwind_ForcedUnwind_Phase2",
	"_Unwind_GetCFA",
	"_Unwind_GetDataRelBase",
	"_Unwind_GetGR",
	"_Unwind_GetIP",
	"_Unwind_GetIPInfo",
	"_Unwind_GetLanguageSpecificData",
	"_Unwind_GetRegionStart",
	"_Unwind_GetTextRelBase",
	"_Unwind_RaiseException",
	"_Unwind_RaiseException_Phase2",
	"_Unwind_Resume",
	"_Unwind_Resume_or_Rethrow",
	"_Unwind_SetGR",
	"_Unwind_SetIP",
	"_dl_add_to_namespace_list",
	"_dl_add_to_slotinfo",
	"_dl_addr",
	"_dl_addr_inside_object",
	"_dl_allocate_static_tls",
	"_dl_allocate_tls",
	"_dl_allocate_tls_init",
	"_dl_allocate_tls_init.part.0",
	"_dl_allocate_tls_storage",
	"_dl_assign_tls_modid",
	"_dl_audit_pltexit",
	"_dl_aux_init",
	"_dl_cache_libcmp",
	"_dl_call_fini",
	"_dl_call_libc_early_init",
	"_dl_catch_error",
	"_dl_catch_exception",
	"_dl_check_all_versions",
	"_dl_check_map_versions",
	"_dl_close",
	"_dl_close_worker",
	"_dl_count_modids",
	"_dl_deallocate_tls",
	"_dl_debug_initialize",
	"_dl_debug_printf",
	"_dl_debug_printf_c",
	"_dl_debug_state",
	"_dl_debug_update",
	"_dl_debug_vdprintf",
	"_dl_dprintf",
	"_dl_dst_count",
	"_dl_dst_substitute",
	"_dl_early_allocate",
	"_dl_error_free",
	"_dl_error_printf",
	"_dl_exception_create",
	"_dl_exception_create_format",
	"_dl_exception_free",
	"_dl_fatal_printf",
	"_dl_find_dso_for_object",
	"_dl_find_object",
	"_dl_find_object_dlclose",
	"_dl_find_object_freeres",
	"_dl_find_object_from_map",
	"_dl_find_object_init",
	"_dl_find_object_update",
	"_dl_fixup",
	"_dl_get_dl_main_map",
	"_dl_get_origin",
	"_dl_get_tls_static_info",
	"_dl_higher_prime_number",
	"_dl_init",
	"_dl_init_paths",
	"_dl_init_static_tls",
	"_dl_load_cache_lookup",
	"_dl_lookup_direct",
	"_dl_lookup_symbol_x",
	"_dl_make_stacks_executable",
	"_dl_map_object",
	"_dl_map_object_deps",
	"_dl_map_object_from_fd.constprop.0",
	"_dl_name_match_p",
	"_dl_new_object",
	"_dl_non_dynamic_init",
	"_dl_open",
	"_dl_printf",
	"_dl_process_pt_gnu_property",
	"_dl_protect_relro",
	"_dl_reloc_bad_type",
	"_dl_relocate_object",
	"_dl_rtld_di_serinfo",
	"_dl_runtime_resolve",
	"_dl_scope_free",
	"_dl_setup_hash",
	"_dl_show_scope",
	"_dl_signal_error",
	"_dl_signal_exception",
	"_dl_sort_maps",
	"_dl_sort_maps_init",
	"_dl_start",
	"_dl_strtoul",
	"_dl_sym",
	"_dl_sysdep_read_whole_file",
	"_dl_tls_get_addr_soft",
	"_dl_tls_static_surplus_init",
	"_dl_try_allocate_static_tls",
	"_dl_tunable_set_mutex_spin_count",
	"_dl_tunable_set_stack_cache_size",
	"_dl_tunable_set_stack_hugetlb",
	"_dl_unload_cache",
	"_dl_vsym",
	"_dlerror_run",
	"_dlfo_process_initial",
	"_dlfo_sort_mappings",
	"_dlfo_sort_mappings.part.0",
	"_exit",
	"_fitoa_word",
	"_flushlbf",
	"_itoa_word",
	"_nl_archive_subfreeres",
	"_nl_cleanup_ctype",
	"_nl_cleanup_time",
	"_nl_expand_alias",
	"_nl_explode_name",
	"_nl_find_domain",
	"_nl_find_locale",
	"_nl_find_msg",
	"_nl_finddomain_subfreeres",
	"_nl_intern_locale_data",
	"_nl_load_domain",
	"_nl_load_locale",
	"_nl_load_locale_from_archive",
	"_nl_locale_subfreeres",
	"_nl_make_l10nflist",
	"_nl_normalize_codeset",
	"_nl_postload_ctype",
	"_nl_remove_locale",
	"_nl_unload_domain",
	"_nl_unload_locale",
	"_pthread_cleanup_pop",
	"_pthread_cleanup_push",
	"_setjmp",
	"_start",
	"_Fork",
	"_IO_fgetpos",
	"_IO_fgetpos64",
	"_IO_fsetpos",
	"_IO_fsetpos64",
	"_IO_new_fgetpos",
	"_IO_new_fgetpos64",
	"_IO_new_fsetpos",
	"_IO_new_fsetpos64",
	"_IO_seekoff",
	"_IO_seekoff_unlocked",
	"_IO_seekpos",
	"_IO_seekpos_unlocked",
	"_IO_ungetc",
	"_dl_tunable_set_arena_max",
	"_dl_tunable_set_arena_test",
	"_dl_tunable_set_hugetlb",
	"_dl_tunable_set_mmap_threshold",
	"_dl_tunable_set_mmaps_max",
	"_dl_tunable_set_mxfast",
	"_dl_tunable_set_perturb_byte",
	"_dl_tunable_set_tcache_count",
	"_dl_tunable_set_tcache_max",
	"_dl_tunable_set_tcache_unsorted_limit",
	"_dl_tunable_set_top_pad",
	"_dl_tunable_set_trim_threshold",
	"_int_free",
	"_int_free_create_chunk",
	"_int_free_maybe_consolidate.part.0",
	"_int_free_merge_chunk",
	"_int_malloc",
	"_int_memalign",
	"_int_realloc",
	"_longjmp",
	"_longjmp_unwind",
	"_mid_memalign.isra.0",
	"_nss_dns_getcanonname_r",
	"_nss_dns_gethostbyaddr2_r",
	"_nss_dns_gethostbyaddr_r",
	"_nss_dns_gethostbyname2_r",
	"_nss_dns_gethostbyname3_r",
	"_nss_dns_gethostbyname4_r",
	"_nss_dns_gethostbyname_r",
	"_nss_dns_getnetbyaddr_r",
	"_nss_dns_getnetbyname_r",
	"_nss_files_endaliasent",
	"_nss_files_endetherent",
	"_nss_files_endgrent",
	"_nss_files_endhostent",
	"_nss_files_endnetent",
	"_nss_files_endnetgrent",
	"_nss_files_endprotoent",
	"_nss_files_endpwent",
	"_nss_files_endrpcent",
	"_nss_files_endservent",
	"_nss_files_endsgent",
	"_nss_files_endspent",
	"_nss_files_getaliasbyname_r",
	"_nss_files_getaliasent_r",
	"_nss_files_getetherent_r",
	"_nss_files_getgrent_r",
	"_nss_files_getgrgid_r",
	"_nss_files_getgrnam_r",
	"_nss_files_gethostbyaddr_r",
	"_nss_files_gethostbyname2_r",
	"_nss_files_gethostbyname3_r",
	"_nss_files_gethostbyname4_r",
	"_nss_files_gethostbyname_r",
	"_nss_files_gethostent_r",
	"_nss_files_gethostton_r",
	"_nss_files_getnetbyaddr_r",
	"_nss_files_getnetbyname_r",
	"_nss_files_getnetent_r",
	"_nss_files_getnetgrent_r",
	"_nss_files_getntohost_r",
	"_nss_files_getprotobyname_r",
	"_nss_files_getprotobynumber_r",
	"_nss_files_getprotoent_r",
	"_nss_files_getpwent_r",
	"_nss_files_getpwnam_r",
	"_nss_files_getpwuid_r",
	"_nss_files_getrpcbyname_r",
	"_nss_files_getrpcbynumber_r",
	"_nss_files_getrpcent_r",
	"_nss_files_getservbyname_r",
	"_nss_files_getservbyport_r",
	"_nss_files_getservent_r",
	"_nss_files_getsgent_r",
	"_nss_files_getsgnam_r",
	"_nss_files_getspent_r",
	"_nss_files_getspnam_r",
	"_nss_files_initgroups_dyn",
	"_nss_files_parse_etherent",
	"_nss_files_parse_grent",
	"_nss_files_parse_netent",
	"_nss_files_parse_protoent",
	"_nss_files_parse_pwent",
	"_nss_files_parse_rpcent",
	"_nss_files_parse_servent",
	"_nss_files_parse_sgent",
	"_nss_files_parse_spent",
	"_nss_files_setaliasent",
	"_nss_files_setetherent",
	"_nss_files_setgrent",
	"_nss_files_sethostent",
	"_nss_files_setnetent",
	"_nss_files_setnetgrent",
	"_nss_files_setprotoent",
	"_nss_files_setpwent",
	"_nss_files_setrpcent",
	"_nss_files_setservent",
	"_nss_files_setsgent",
	"_nss_files_setspent",
	"_nss_netgroup_parseline",
	"_res_hconf_init",
	"_res_hconf_reorder_addrs",
	"_res_hconf_trim_domain",
	"_res_hconf_trim_domains",
	"btree_node_update_separator_after_split",
	"frame_downheap",
	"version_lock_lock_exclusive",
	"read_encoded_value_with_base",
	"fde_unencoded_extract",
	"fde_radixsort",
	"fde_unencoded_compare",
	"version_lock_unlock_exclusive",
	"btree_allocate_node",
	"btree_handle_root_split.part.0",
	"btree_insert.isra.0",
	"btree_release_tree_recursively",
	"btree_destroy",
	"get_cie_encoding",
	"btree_remove",
	"fde_mixed_encoding_extract",
	"classify_object_over_fdes",
	"get_pc_range",
	"fde_single_encoding_extract",
	"fde_single_encoding_compare",
	"fde_mixed_encoding_compare",
	"add_fdes.isra.0",
	"linear_search_fdes",
	"release_registered_frames",
	"deregister_tm_clones",
	"register_tm_clones",
	"frame_dummy",
	"d_make_comp",
	"d_number",
	"d_call_offset",
	"d_discriminator",
	"d_count_templates_scopes",
	"d_pack_length",
	"d_index_template_argument.part.0",
	"d_growable_string_callback_adapter",
	"next_is_type_qual.isra.0",
	"d_append_char",
	"d_lookup_template_argument",
	"d_find_pack",
	"d_append_string",
	"d_template_param",
	"d_append_num",
	"d_print_lambda_parm_name",
	"d_source_name",
	"d_substitution",
	"d_maybe_module_name",
	"d_type",
	"d_cv_qualifiers",
	"d_function_type",
	"d_name",
	"d_expression_1",
	"d_template_args_1",
	"d_parmlist",
	"d_bare_function_type",
	"d_template_parm",
	"d_template_head",
	"d_operator_name",
	"d_unqualified_name",
	"d_exprlist",
	"d_prefix",
	"d_expr_primary",
	"d_special_name",
	"d_encoding.part.0",
	"d_template_arg",
	"d_print_comp_inner",
	"d_print_comp",
	"d_print_mod",
	"d_print_array_type",
	"d_print_expr_op",
	"d_print_subexpr",
	"d_maybe_print_fold_expression",
	"d_maybe_print_designated_init",
	"d_print_function_type",
	"d_print_mod_list",
	"d_demangle_callback.constprop.0",
	"init_dwarf_reg_size_table",
	"uw_install_context_1",
	"read_encoded_value",
	"execute_stack_op",
	"uw_update_context_1",
	"execute_cfa_program_specialized",
	"execute_cfa_program_generic",
	"uw_frame_state_for",
	"uw_init_context_1",
	"call_fini",
	"check_one_fd",
	"new_do_write",
	"mmap_remap_check",
	"decide_maybe_mmap",
	"flush_cleanup",
	"save_for_backup",
	"enlarge_userbuf",
	"malloc_printerr",
	"int_mallinfo",
	"alloc_perturb",
	"munmap_chunk",
	"detach_arena.part.0",
	"unlink_chunk.isra.0",
	"malloc_consolidate",
	"ptmalloc_init.part.0",
	"alloc_new_heap",
	"new_heap",
	"arena_get2",
	"arena_get_retry",
	"sysmalloc_mmap_fallback.constprop.0",
	"sysmalloc_mmap.isra.0",
	"systrim.constprop.0",
	"sysmalloc",
	"tcache_init.part.0",
	"two_way_long_needle",
	"next_line",
	"read_sysfs_file",
	"get_nproc_stat",
	"do_tunable_update_val",
	"tunable_initialize",
	"parse_tunables",
	"elf_machine_matches_host",
	"free_derivation",
	"free_modules_db",
	"derivation_compare",
	"find_derivation",
	"insert_module",
	"add_module",
	"add_alias2.part.0",
	"read_conf_file.isra.0",
	"find_module_idx",
	"find_module.constprop.0",
	"known_compare",
	"do_release_shlib",
	"do_release_all",
	"new_composite_name",
	"free_category",
	"plural_eval",
	"transcmp",
	"alias_compare",
	"read_alias_file",
	"do_swap",
	"msort_with_tmp.part.0",
	"indirect_msort_with_tmp",
	"read_int",
	"outstring_converted_wide_string",
	"group_number",
	"printf_positional",
	"read_int",
	"save_for_wbackup",
	"adjust_wide_data",
	"clear_once_control",
	"opendir_tail",
	"trecurse",
	"trecurse_r",
	"tdestroy_recurse",
	"maybe_split_for_insert.isra.0",
	"fatal_error",
	"length_mismatch",
	"is_dst",
	"is_trusted_path_normalize",
	"add_path.constprop.0.isra.0",
	"add_name_to_object.isra.0",
	"open_verify.constprop.0",
	"open_path.isra.0",
	"elf_machine_matches_host",
	"expand_dynamic_string_token",
	"fillin_rpath.isra.0",
	"decompose_rpath",
	"check_match",
	"do_lookup_x",
	"elf_machine_matches_host",
	"elf_machine_matches_host",
	"search_cache",
	"do_dlopen",
	"dlerror_run",
	"do_dlsym_private",
	"do_dlsym",
	"do_dlvsym",
	"do_dlclose",
	"free_slotinfo",
	"gconv_parse_code",
	"hack_digit",
	"two_way_long_needle",
	"remove_slotinfo",
	"call_dl_init",
	"add_to_global_update",
	"dl_open_worker",
	"dl_open_worker_begin",
	"add_to_global_resize_failure.isra.0",
	"add_to_global_resize",
	"elf_machine_matches_host",
	"dfs_traversal.part.0",
	"dlinfo_doit",
	"dlmopen_doit",
	"dlopen_doit",
	"dlsym_doit",
	"dlvsym_doit",
	"openaux",
	"call_init",
	"check_match",
	"call_dl_lookup",
	"do_sym",
	"base_of_encoded_value",
	"read_encoded_value_with_base",
	"stpcpy",
	"tsearch",
	"clock_gettime",
	"secure_getenv",
	"strcpy",
	"unsetenv",
	"gsignal",
	"bcmp",
	"setjmp",
	"getrlimit",
	"ioctl",
	"dlerror",
	"fstatat",
	"strtok_r",
	"dlinfo",
	"sysconf",
	"vsprintf",
	"getdtablesize",
	"fdopendir",
	"strtoull_l",
	"pthread_rwlock_rdlock",
	"memrchr",
	"strndup",
	"argz_add_sep",
	"stat64",
	"memmove",
	"pthread_rwlock_init",
	"getauxval",
	"snprintf",
	"munmap",
	"sched_getparam",
	"malloc_stats",
	"strtoimax",
	"getenv",
	"wcslen",
	"memmem",
	"wmempcpy",
	"getpid",
	"getpagesize",
	"arc4random",
	"qsort",
	"dlmopen",
	"getrlimit64",
	"memcpy",
	"strtoll_l",
	"rewinddir",
	"malloc",
	"isatty",
	"openat64",
	"sched_setscheduler",
	"sysinfo",
	"vsnprintf",
	"strtoll",
	"register_printf_modifier",
	"strtoumax",
	"strtoul",
	"sched_getscheduler",
	"pthread_rwlock_unlock",
	"readdir",
	"pvalloc",
	"dladdr",
	"lseek",
	"wmemcpy",
	"clearenv",
	"mmap",
	"strtol_l",
	"dlclose",
	"abort",
	"fstat64",
	"tdelete",
	"strtoq",
	"strtol",
	"strnlen",
	"strrchr",
	"calloc",
	"strcasecmp_l",
	"malloc_usable_size",
	"tdestroy",
	"rindex",
	"write",
	"dladdr1",
	"wmemchr",
	"fstat",
	"dcgettext",
	"pthread_once",
	"madvise",
	"mremap",
	"getdelim",
	"memchr",
	"tfind",
	"lstat",
	"strstr",
	"pthread_kill",
	"read",
	"getentropy",
	"strncmp",
	"dlopen",
	"wcsrtombs",
	"getdents64",
	"pthread_rwlock_wrlock",
	"get_avphys_pages",
	"setenv",
	"sched_get_priority_max",
	"funlockfile",
	"pthread_sigmask",
	"realloc",
	"readdir64",
	"wcsnlen",
	"register_printf_specifier",
	"memcmp",
	"sched_get_priority_min",
	"malloc_trim",
	"lstat64",
	"sigaction",
	"twalk_r",
	"dlsym",
	"sbrk",
	"strdup",
	"strtoull",
	"index",
	"fopen",
	"memset",
	"get_phys_pages",
	"mallinfo2",
	"mallopt",
	"fclose",
	"open64",
	"malloc_info",
	"tcgetattr",
	"opendir",
	"strcmp",
	"pthread_mutex_unlock",
	"register_printf_function",
	"strtoul_l",
	"getcwd",
	"fstatat64",
	"memalign",
	"asprintf",
	"strerror_r",
	"strcspn",
	"setlocale",
	"mmap64",
	"strsep",
	"valloc",
	"dlvsym",
	"fputc",
	"register_printf_type",
	"mallinfo",
	"pthread_self",
	"twalk",
	"argz_create_sep",
	"stat",
	"fast_exit",
	"wmemmove",
	"fwrite",
	"qsort_r",
	"strtouq",
	"pthread_mutex_lock",
	"gettext",
	"get_nprocs",
	"exit",
	"brk",
	"openat",
	"fgets_unlocked",
	"strspn",
	"strlen",
	"lseek64",
	"open",
	"strchr",
	"arc4random_buf",
	"fputs",
	"mprotect",
	"closedir",
	"vasprintf",
	"strchrnul",
	"get_nprocs_conf",
	"aligned_alloc",
	"posix_memalign",
	"wcrtomb",
	"close",
	"raise",
	"free",
	"sigprocmask",
	"fopen64",
	"accept4",
	"action_list_add__",
	"add_prefixlist",
	"arg_bool",
	"arg_trimdomain_list",
	"array_add__",
	"binary_hnok",
	"bind",
	"bsd_signal",
	"btowc",
	"canonicalize_file_name",
	"char_buffer_add_slow",
	"chdir",
	"chmod",
	"chown",
	"chroot",
	"cleanup",
	"clock_nanosleep",
	"clone",
	"clone3",
	"conf_decrement.part.0",
	"connect",
	"context_reuse",
	"context_send_common",
	"convert_hostent_to_gaih_addrtuple",
	"create_thread",
	"decrement_at_index.part.0",
	"dirfd",
	"dl_iterate_phdr",
	"dn_expand",
	"dn_skipname",
	"do_init",
	"dup2",
	"execve",
	"execvp",
	"execvpe",
	"faccessat",
	"fchdir",
	"fchmod",
	"fchown",
	"fcntl",
	"fcntl64",
	"fdatasync",
	"fgetgrent_r",
	"fgetpos",
	"fgetpos64",
	"fgetpwent_r",
	"fileno",
	"fileno_unlocked",
	"fork",
	"freeaddrinfo",
	"freeifaddrs",
	"fseeko",
	"fseeko64",
	"fsetpos",
	"fsetpos64",
	"fsync",
	"ftello",
	"ftello64",
	"ftruncate",
	"ftruncate64",
	"functions_allocate",
	"functions_deallocate",
	"futimens",
	"gai_strerror",
	"gaiconf_init",
	"gaih_getanswer_slice.isra.0",
	"gaih_inet_serv",
	"get_locked_global",
	"get_next_alias",
	"get_scope",
	"getaddrinfo",
	"getanswer_r",
	"getanswer_r.constprop.0",
	"getanswer_r_store_alias",
	"getegid",
	"geteuid",
	"getgid",
	"getgroups",
	"gethostbyname2_r",
	"gethostbyname3_context",
	"gethostbyname3_multi",
	"gethostname",
	"gethosts",
	"getifaddrs",
	"getifaddrs_internal",
	"getline",
	"getpeername",
	"getpgid",
	"getppid",
	"getpwuid_r",
	"getservbyname_r",
	"getsockname",
	"getsockopt",
	"getuid",
	"global_state_allocate",
	"gnu_get_libc_release",
	"gnu_get_libc_version",
	"group_member",
	"if_freenameindex",
	"if_indextoname",
	"if_nameindex",
	"if_nametoindex",
	"in6aicmp",
	"inet_addr",
	"inet_aton",
	"inet_aton_end",
	"inet_makeaddr",
	"inet_network",
	"inet_pton",
	"inet_pton4",
	"inet_pton6",
	"internal_getent",
	"internal_getent",
	"internal_getent",
	"internal_getent",
	"internal_getent",
	"internal_getent",
	"internal_getent",
	"internal_getent",
	"internal_getent",
	"internal_getent",
	"kill",
	"lchown",
	"linkat",
	"listen",
	"locked_vfxprintf",
	"longjmp",
	"match_prefix",
	"maybe_init",
	"maybe_script_execute",
	"mbrlen",
	"mbrtowc",
	"mbsrtowcs",
	"mkdir",
	"module_load",
	"module_load_builtin",
	"name_to_database_index",
	"nameserver_list_emplace",
	"nanosleep",
	"ns_name_compress",
	"ns_name_ntop",
	"ns_name_pack",
	"ns_name_pton",
	"ns_name_skip",
	"ns_name_uncompress",
	"ns_name_unpack",
	"nscd_gethst_r",
	"nscd_getpw_r",
	"nscd_getserv_r",
	"nss_database_check_reload_and_get",
	"nss_files_global_allocate",
	"open_socket",
	"pause",
	"pipe2",
	"poll",
	"posix_spawn_file_actions_adddup2",
	"posix_spawn_file_actions_destroy",
	"posix_spawn_file_actions_init",
	"posix_spawnattr_destroy",
	"posix_spawnattr_init",
	"posix_spawnattr_setflags",
	"posix_spawnattr_setpgroup",
	"posix_spawnattr_setsigdefault",
	"posix_spawnp",
	"prctl",
	"pread",
	"pread64",
	"preadv",
	"preadv64",
	"prefixcmp",
	"pthread_attr_destroy",
	"pthread_attr_getguardsize",
	"pthread_attr_getstack",
	"pthread_attr_init",
	"pthread_attr_setaffinity_np",
	"pthread_attr_setstacksize",
	"pthread_cancel",
	"pthread_create",
	"pthread_detach",
	"pthread_getaffinity_np",
	"pthread_getattr_default_np",
	"pthread_getattr_np",
	"pthread_getspecific",
	"pthread_join",
	"pthread_key_create",
	"pthread_key_delete",
	"pthread_mutex_trylock",
	"pthread_setcancelstate",
	"pthread_setname_np",
	"pthread_setspecific",
	"ptrlist_add__",
	"pwrite",
	"pwrite64",
	"pwritev",
	"pwritev64",
	"readlink",
	"readv",
	"realpath",
	"recv",
	"recvfrom",
	"recvmsg",
	"rename",
	"reopen",
	"res_dnok",
	"res_hnok",
	"res_mailok",
	"res_mkquery",
	"res_nmkquery",
	"res_nquery",
	"res_nquerydomain",
	"res_nsearch",
	"res_nsend",
	"res_ownok",
	"res_query",
	"res_querydomain",
	"res_search",
	"res_send",
	"res_setoptions",
	"resolv_conf_matches",
	"rewind",
	"rfc3484_sort",
	"rmdir",
	"round_and_return",
	"round_and_return",
	"round_and_return",
	"round_away",
	"round_away",
	"round_away",
	"rust_begin_unwind",
	"rust_eh_personality",
	"rust_panic",
	"same_address",
	"sched_getaffinity",
	"sched_setparam",
	"sched_yield",
	"scopecmp",
	"search_list_add__",
	"send",
	"send_dg",
	"send_vc",
	"sendfile",
	"sendfile64",
	"sendmmsg",
	"sendmsg",
	"sendto",
	"setgid",
	"setgroups",
	"setpgid",
	"setsid",
	"setsockopt",
	"setuid",
	"setxid_error",
	"setxid_mark_thread.isra.0",
	"setxid_signal_thread",
	"setxid_unmark_thread.isra.0",
	"sgetsgent_r",
	"sgetspent_r",
	"shutdown",
	"sigaddset",
	"sigaltstack",
	"sigcancel_handler",
	"sigemptyset",
	"siglongjmp",
	"signal",
	"sock_eq",
	"socket",
	"socketpair",
	"splice",
	"ssignal",
	"start_thread",
	"str_to_mpn.part.0.constprop.0",
	"str_to_mpn.part.0.constprop.0",
	"str_to_mpn.part.0.constprop.0",
	"strcasecmp",
	"strip_whitespace",
	"strncasecmp",
	"strncasecmp_l",
	"strncpy",
	"strpbrk",
	"strtod",
	"strtod_l",
	"strtof",
	"strtof128",
	"strtof128_l",
	"strtof32",
	"strtof32_l",
	"strtof32x",
	"strtof32x_l",
	"strtof64",
	"strtof64_l",
	"strtof64x",
	"strtof64x_l",
	"strtof_l",
	"strtold",
	"strtold_l",
	"symlink",
	"syscall",
	"tcsetpgrp",
	"towctrans",
	"uname",
	"ungetc",
	"unlink",
	"unlinkat",
	"unwind_cleanup",
	"unwind_stop",
	"utimensat",
	"wait4",
	"wait_on_socket",
	"waitid",
	"waitpid",
	"wcschrnul",
	"wctrans",
	"wmemset",
	"writev",
	"powf",
	"powf32",
	"sinf",
	"sinf32",
	"cosf",
	"cosf32",
	"sincosf",
	"sincosf32",
	"with_errnof",
	"xflowf",
	"floor",
	"floorf32x",
	"floorf64",
};

PackedStringArray Sandbox::get_functions() const {
	PackedStringArray result;
	// Get all unmangled public functions from the guest program.
	// Exclude functions that belong to the C/C++ runtime, as well as compiler-generated functions.
	for (auto &function : machine().memory.all_unmangled_function_symbols()) {
		// Double underscore functions are compiler-generated functions.
		if (function.size() >= 2 && function[0] == '_' && function[1] == '_') {
			continue;
		}
		if (exclude_functions.count(function) == 0) {
			result.append(String(std::string(function).c_str()));
		}
	}
	return result;
}

Sandbox::BinaryInfo Sandbox::get_program_info_from_binary(const PackedByteArray &binary) {
	BinaryInfo result;
	if (binary.is_empty()) {
		return result;
	}

	const auto binary_view = std::string_view{ (const char *)binary.ptr(), static_cast<size_t>(binary.size()) };
	try {
		// Instantiate Machine without loading the ELF
		machine_t machine{ binary_view, riscv::MachineOptions<RISCV_ARCH>{
												.load_program = false, // Do not load the ELF program.
										} };
		std::vector<std::string_view> comments = machine.memory.elf_comments();
		// Detect language: C++, Rust, etc.
		result.language = "Unknown";
		result.version = 0;
		for (const auto &comment : comments) {
			if (comment.find("Godot Rust") != std::string::npos) {
				// Rust: "Godot Rust API v1"
				result.language = "Rust";
				auto version = comment.find("API v");
				if (version != std::string::npos) {
					result.version = std::stoi(std::string(comment.substr(version + 5)));
				}
				break;
			} else if (comment.find("Godot C++") != std::string::npos) {
				// C++: "Godot C++ API v1"
				result.language = "C++";
				auto version = comment.find("API v");
				if (version != std::string::npos) {
					result.version = std::stoi(std::string(comment.substr(version + 5)));
				}
				break;
			}
		}
		//printf("Detected language: %s, version: %d\n", result.language.utf8().ptr(), result.version);

		// Get all unmangled public functions from the guest program.
		// Exclude functions that belong to the C/C++ runtime, as well as compiler-generated functions.
		for (auto &function : machine.memory.all_unmangled_function_symbols()) {
			// Double underscore functions are compiler-generated functions.
			if (function.size() >= 2 && function[0] == '_' && function[1] == '_') {
				continue;
			}
			if (exclude_functions.count(function) == 0) {
				result.functions.append(String(std::string(function).c_str()));
			}
		}
	} catch (const std::exception &e) {
		ERR_PRINT("Failed to get functions from binary. " + String(e.what()));
	}
	return result;
}
