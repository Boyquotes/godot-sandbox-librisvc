#pragma once
#include "node.hpp"
#include "dictionary.hpp"
#include "transform2d.hpp"
#include "rid.hpp"

struct CanvasItem : public Node {
    using Node::Node;
    PROPERTY(visible, bool);
    PROPERTY(modulate, Color);
    PROPERTY(self_modulate, Color);
    PROPERTY(show_behind_parent, bool);
    PROPERTY(top_level, bool);
    PROPERTY(clip_children, int64_t);
    PROPERTY(light_mask, int64_t);
    PROPERTY(visibility_layer, int64_t);
    PROPERTY(z_index, int64_t);
    PROPERTY(z_as_relative, bool);
    PROPERTY(y_sort_enabled, bool);
    PROPERTY(texture_filter, int64_t);
    PROPERTY(texture_repeat, int64_t);
    PROPERTY(material, Object);
    PROPERTY(use_parent_material, bool);
    METHOD(_draw);
    METHOD(_top_level_raise_self);
    METHOD(_edit_set_state);
    TYPED_METHOD(Dictionary, _edit_get_state);
    METHOD(_edit_set_position);
    TYPED_METHOD(Vector2, _edit_get_position);
    METHOD(_edit_set_scale);
    TYPED_METHOD(Vector2, _edit_get_scale);
    METHOD(_edit_set_rect);
    TYPED_METHOD(Rect2, _edit_get_rect);
    TYPED_METHOD(bool, _edit_use_rect);
    METHOD(_edit_set_rotation);
    TYPED_METHOD(double, _edit_get_rotation);
    TYPED_METHOD(bool, _edit_use_rotation);
    METHOD(_edit_set_pivot);
    TYPED_METHOD(Vector2, _edit_get_pivot);
    TYPED_METHOD(bool, _edit_use_pivot);
    TYPED_METHOD(Transform2D, _edit_get_transform);
    TYPED_METHOD(::RID, get_canvas_item);
    TYPED_METHOD(void, set_visible);
    TYPED_METHOD(bool, is_visible);
    TYPED_METHOD(bool, is_visible_in_tree);
    METHOD(show);
    METHOD(hide);
    METHOD(queue_redraw);
    METHOD(move_to_front);
    TYPED_METHOD(void, set_as_top_level);
    TYPED_METHOD(bool, is_set_as_top_level);
    TYPED_METHOD(void, set_light_mask);
    TYPED_METHOD(int64_t, get_light_mask);
    TYPED_METHOD(void, set_modulate);
    TYPED_METHOD(Color, get_modulate);
    TYPED_METHOD(void, set_self_modulate);
    TYPED_METHOD(Color, get_self_modulate);
    TYPED_METHOD(void, set_z_index);
    TYPED_METHOD(int64_t, get_z_index);
    TYPED_METHOD(void, set_z_as_relative);
    TYPED_METHOD(bool, is_z_relative);
    TYPED_METHOD(void, set_y_sort_enabled);
    TYPED_METHOD(bool, is_y_sort_enabled);
    TYPED_METHOD(void, set_draw_behind_parent);
    TYPED_METHOD(bool, is_draw_behind_parent_enabled);
    METHOD(draw_line);
    METHOD(draw_dashed_line);
    METHOD(draw_polyline);
    METHOD(draw_polyline_colors);
    METHOD(draw_arc);
    METHOD(draw_multiline);
    METHOD(draw_multiline_colors);
    METHOD(draw_rect);
    METHOD(draw_circle);
    METHOD(draw_texture);
    METHOD(draw_texture_rect);
    METHOD(draw_texture_rect_region);
    METHOD(draw_msdf_texture_rect_region);
    METHOD(draw_lcd_texture_rect_region);
    METHOD(draw_style_box);
    METHOD(draw_primitive);
    METHOD(draw_polygon);
    METHOD(draw_colored_polygon);
    METHOD(draw_string);
    METHOD(draw_multiline_string);
    METHOD(draw_string_outline);
    METHOD(draw_multiline_string_outline);
    METHOD(draw_char);
    METHOD(draw_char_outline);
    METHOD(draw_mesh);
    METHOD(draw_multimesh);
    METHOD(draw_set_transform);
    METHOD(draw_set_transform_matrix);
    METHOD(draw_animation_slice);
    METHOD(draw_end_animation);
    TYPED_METHOD(Transform2D, get_transform);
    TYPED_METHOD(Transform2D, get_global_transform);
    TYPED_METHOD(Transform2D, get_global_transform_with_canvas);
    TYPED_METHOD(Transform2D, get_viewport_transform);
    TYPED_METHOD(Rect2, get_viewport_rect);
    TYPED_METHOD(Transform2D, get_canvas_transform);
    TYPED_METHOD(Transform2D, get_screen_transform);
    TYPED_METHOD(Vector2, get_local_mouse_position);
    TYPED_METHOD(Vector2, get_global_mouse_position);
    TYPED_METHOD(::RID, get_canvas);
    TYPED_METHOD(Object, get_canvas_layer_node);
    TYPED_METHOD(Object, get_world_2d);
    TYPED_METHOD(void, set_material);
    TYPED_METHOD(Object, get_material);
    TYPED_METHOD(void, set_use_parent_material);
    TYPED_METHOD(bool, get_use_parent_material);
    TYPED_METHOD(void, set_notify_local_transform);
    TYPED_METHOD(bool, is_local_transform_notification_enabled);
    TYPED_METHOD(void, set_notify_transform);
    TYPED_METHOD(bool, is_transform_notification_enabled);
    METHOD(force_update_transform);
    TYPED_METHOD(Vector2, make_canvas_position_local);
    TYPED_METHOD(Object, make_input_local);
    TYPED_METHOD(void, set_visibility_layer);
    TYPED_METHOD(int64_t, get_visibility_layer);
    TYPED_METHOD(void, set_visibility_layer_bit);
    TYPED_METHOD(bool, get_visibility_layer_bit);
    TYPED_METHOD(void, set_texture_filter);
    TYPED_METHOD(int64_t, get_texture_filter);
    TYPED_METHOD(void, set_texture_repeat);
    TYPED_METHOD(int64_t, get_texture_repeat);
    TYPED_METHOD(void, set_clip_children_mode);
    TYPED_METHOD(int64_t, get_clip_children_mode);
    static constexpr int64_t NOTIFICATION_TRANSFORM_CHANGED = 2000;
    static constexpr int64_t NOTIFICATION_LOCAL_TRANSFORM_CHANGED = 35;
    static constexpr int64_t NOTIFICATION_DRAW = 30;
    static constexpr int64_t NOTIFICATION_VISIBILITY_CHANGED = 31;
    static constexpr int64_t NOTIFICATION_ENTER_CANVAS = 32;
    static constexpr int64_t NOTIFICATION_EXIT_CANVAS = 33;
    static constexpr int64_t NOTIFICATION_WORLD_2D_CHANGED = 36;
    static constexpr int64_t TEXTURE_FILTER_PARENT_NODE = 0;
    static constexpr int64_t TEXTURE_FILTER_NEAREST = 1;
    static constexpr int64_t TEXTURE_FILTER_LINEAR = 2;
    static constexpr int64_t TEXTURE_FILTER_NEAREST_WITH_MIPMAPS = 3;
    static constexpr int64_t TEXTURE_FILTER_LINEAR_WITH_MIPMAPS = 4;
    static constexpr int64_t TEXTURE_FILTER_NEAREST_WITH_MIPMAPS_ANISOTROPIC = 5;
    static constexpr int64_t TEXTURE_FILTER_LINEAR_WITH_MIPMAPS_ANISOTROPIC = 6;
    static constexpr int64_t TEXTURE_FILTER_MAX = 7;
    static constexpr int64_t TEXTURE_REPEAT_PARENT_NODE = 0;
    static constexpr int64_t TEXTURE_REPEAT_DISABLED = 1;
    static constexpr int64_t TEXTURE_REPEAT_ENABLED = 2;
    static constexpr int64_t TEXTURE_REPEAT_MIRROR = 3;
    static constexpr int64_t TEXTURE_REPEAT_MAX = 4;
    static constexpr int64_t CLIP_CHILDREN_DISABLED = 0;
    static constexpr int64_t CLIP_CHILDREN_ONLY = 1;
    static constexpr int64_t CLIP_CHILDREN_AND_DRAW = 2;
    static constexpr int64_t CLIP_CHILDREN_MAX = 3;
};
